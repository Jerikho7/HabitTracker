name: Django CI

on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Poetry and flake8
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          export PATH="$HOME/.local/bin:$PATH"
          poetry config virtualenvs.create false
          poetry install --no-root
          poetry add --dev flake8

      - name: Run flake8
        run: |
          export PATH="$HOME/.local/bin:$PATH"
          poetry run flake8 .

  tests:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Create .env file
        run: |
          echo "${{ secrets.DOTENV }}" > .env

      - name: Install Poetry and dependencies
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          export PATH="$HOME/.local/bin:$PATH"
          poetry config virtualenvs.create false
          poetry install --no-root

      - name: Run tests
        run: |
          export PATH="$HOME/.local/bin:$PATH"
          poetry run python manage.py test

  build:
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Create .env file
        run: |
          echo "${{ secrets.DOTENV }}" > .env

      - name: Log in in Docker Hub
        run: echo ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/habittracker:${{ github.sha }} .

      - name: Push Docker image to Docker hub
        run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/habittracker:${{ github.sha }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Create .env file
        run: |
          echo "${{ secrets.DOTENV }}" > .env

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Deploy to server
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} "
            docker stop habittracker || true
            docker rm habittracker || true
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/habittracker:${{ github.sha }}
            docker run -d \
              --name habittracker \
              --restart always \
              -p 80:8000 \
              -e DATABASE_URL=${{ secrets.DATABASE_URL }} \
              ${{ secrets.DOCKER_HUB_USERNAME }}/habittracker:${{ github.sha }}
          "
