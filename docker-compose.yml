services:
  db:
    image: postgres:15.1-alpine
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    healthcheck:
      test: pg_isready -U postgres -d ${POSTGRES_DB}
      interval: 3s
      timeout: 3s
      retries: 10

  redis:
    image: redis:7
    restart: on-failure
    ports:
      - "6379:6379"
    healthcheck:
      test: redis-cli ping
      interval: 1s
      timeout: 1s
      retries: 5

  backend:
    build: .
    command: bash -c "python3 manage.py migrate && python3 manage.py collectstatic -c --noinput && python3 manage.py runserver 0.0.0.0.8000"
    env_file: .env
    environment:
      POSTGRES_HOST: db
      REDIS_URL: redis://redis:6379
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - django_static:/app/static/

  web:
    image: nginx:1.19.3
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_started
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - django_static:/usr/share/nginx/html/static/

  celery:
    build: .
    command: celery -A config worker --loglevel=info
    tty: true
    restart: on-failure
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - web

  celery_beat:
    build: .
    command: celery -A config beat --loglevel=info
    tty: true
    restart: on-failure
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - web

volumes:
  postgres_data:
  django_static:
