version: "3.9"

services:
  web:
    build: .
    tty: true
    command: sh -c "python manage.py collectstatic --noinput && gunicorn config.wsgi:application --bind 0.0.0.0:8000"
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - static_volume:/app/static
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy

  nginx:
    build: ./nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/app/static
    depends_on:
      - web

  db:
    image: postgres:16
    restart: on-failure
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER"]
      interval: 10s
      retries: 5
      timeout: 5s

  redis:
    image: redis:7
    restart: on-failure
    ports:
      - "6379:6379"

  celery:
    build: .
    command: celery -A config worker --loglevel=info
    tty: true
    restart: on-failure
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - web

  celery_beat:
    build: .
    command: celery -A config beat --loglevel=info
    tty: true
    restart: on-failure
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - web

volumes:
  postgres_data:
  static_volume:
